// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, identityMappingStoreId, identityMappingStore) {
  // [START discoveryengine_v1_generated_IdentityMappingStoreService_CreateIdentityMappingStore_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Resource name of the CmekConfig to use for protecting this Identity
   *  Mapping Store.
   */
  // const cmekConfigName = 'abc123'
  /**
   *  Identity Mapping Store without CMEK protections. If a default CmekConfig
   *  is set for the project, setting this field will override the default
   *  CmekConfig as well.
   */
  // const disableCmek = true
  /**
   *  Required. The parent collection resource name, such as
   *  `projects/{project}/locations/{location}`.
   */
  // const parent = 'abc123'
  /**
   *  Required. The ID of the Identity Mapping Store to create.
   *  The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores
   *  (_), and hyphens (-). The maximum length is 63 characters.
   */
  // const identityMappingStoreId = 'abc123'
  /**
   *  Required. The Identity Mapping Store to create.
   */
  // const identityMappingStore = {}

  // Imports the Discoveryengine library
  const {IdentityMappingStoreServiceClient} = require('@google-cloud/discoveryengine').v1;

  // Instantiates a client
  const discoveryengineClient = new IdentityMappingStoreServiceClient();

  async function callCreateIdentityMappingStore() {
    // Construct request
    const request = {
      parent,
      identityMappingStoreId,
      identityMappingStore,
    };

    // Run request
    const response = await discoveryengineClient.createIdentityMappingStore(request);
    console.log(response);
  }

  callCreateIdentityMappingStore();
  // [END discoveryengine_v1_generated_IdentityMappingStoreService_CreateIdentityMappingStore_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
