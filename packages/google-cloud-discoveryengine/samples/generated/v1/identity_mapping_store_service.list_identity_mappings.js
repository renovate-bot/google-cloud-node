// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(identityMappingStore) {
  // [START discoveryengine_v1_generated_IdentityMappingStoreService_ListIdentityMappings_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of the Identity Mapping Store to list Identity Mapping
   *  Entries in. Format:
   *  `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
   */
  // const identityMappingStore = 'abc123'
  /**
   *  Maximum number of IdentityMappings to return. If unspecified, defaults
   *  to 2000. The maximum allowed value is 10000. Values above 10000 will be
   *  coerced to 10000.
   */
  // const pageSize = 1234
  /**
   *  A page token, received from a previous `ListIdentityMappings` call.
   *  Provide this to retrieve the subsequent page.
   *  When paginating, all other parameters provided to
   *  `ListIdentityMappings` must match the call that provided the page
   *  token.
   */
  // const pageToken = 'abc123'

  // Imports the Discoveryengine library
  const {IdentityMappingStoreServiceClient} = require('@google-cloud/discoveryengine').v1;

  // Instantiates a client
  const discoveryengineClient = new IdentityMappingStoreServiceClient();

  async function callListIdentityMappings() {
    // Construct request
    const request = {
      identityMappingStore,
    };

    // Run request
    const iterable = discoveryengineClient.listIdentityMappingsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListIdentityMappings();
  // [END discoveryengine_v1_generated_IdentityMappingStoreService_ListIdentityMappings_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
