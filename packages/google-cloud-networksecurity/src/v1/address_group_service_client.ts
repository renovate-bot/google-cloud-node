// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, GrpcClientOptions, LROperation, PaginationCallback, GaxCall, IamClient, IamProtos, LocationsClient, LocationProtos} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
import {loggingUtils as logging, decodeAnyProtosInArray} from 'google-gax';

/**
 * Client JSON configuration object, loaded from
 * `src/v1/address_group_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './address_group_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  AddressGroup is a resource that manages a collection of IP or Domain Names,
 *  it can be used in Firewall Policy to represent allow or deny traffic from
 *  all the IP or Domain Names from the Address Group.
 * @class
 * @memberof v1
 */
export class AddressGroupServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  private _log = logging.log('networksecurity');

  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  addressGroupServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of AddressGroupServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new AddressGroupServiceClient({fallback: true}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof AddressGroupServiceClient;
    if (opts?.universe_domain && opts?.universeDomain && opts?.universe_domain !== opts?.universeDomain) {
      throw new Error('Please set either universe_domain or universeDomain, but not both.');
    }
    const universeDomainEnvVar = (typeof process === 'object' && typeof process.env === 'object') ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;
    this._universeDomain = opts?.universeDomain ?? opts?.universe_domain ?? universeDomainEnvVar ?? 'googleapis.com';
    this._servicePath = 'networksecurity.' + this._universeDomain;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);
  
    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );
  

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      authorizationPolicyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/authorizationPolicies/{authorization_policy}'
      ),
      clientTlsPolicyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/clientTlsPolicies/{client_tls_policy}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      organizationLocationAddressGroupPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/addressGroups/{address_group}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      projectLocationAddressGroupPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/addressGroups/{address_group}'
      ),
      serverTlsPolicyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/serverTlsPolicies/{server_tls_policy}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listAddressGroups:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'addressGroups'),
      listAddressGroupReferences:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'addressGroupReferences')
    };

    const protoFilesRoot = this._gaxModule.protobufFromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined
    };
    if (opts.fallback) {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [{selector: 'google.cloud.location.Locations.GetLocation',get: '/v1/{name=projects/*/locations/*}',additional_bindings: [{get: '/v1/{name=organizations/*/locations/*}',}],
      },{selector: 'google.cloud.location.Locations.ListLocations',get: '/v1/{name=projects/*}/locations',additional_bindings: [{get: '/v1/{name=organizations/*/locations/*}',}],
      },{selector: 'google.iam.v1.IAMPolicy.GetIamPolicy',get: '/v1/{resource=projects/*/locations/*/authorizationPolicies/*}:getIamPolicy',additional_bindings: [{get: '/v1/{resource=projects/*/locations/*/addressGroups/*}:getIamPolicy',},{get: '/v1/{resource=organizations/*/locations/*/addressGroups/*}:getIamPolicy',},{get: '/v1/{resource=projects/*/locations/*/serverTlsPolicies/*}:getIamPolicy',},{get: '/v1/{resource=projects/*/locations/*/clientTlsPolicies/*}:getIamPolicy',}],
      },{selector: 'google.iam.v1.IAMPolicy.SetIamPolicy',post: '/v1/{resource=projects/*/locations/*/authorizationPolicies/*}:setIamPolicy',body: '*',additional_bindings: [{post: '/v1/{resource=projects/*/locations/*/addressGroups/*}:setIamPolicy',body: '*',},{post: '/v1/{resource=organizations/*/locations/*/addressGroups/*}:setIamPolicy',body: '*',},{post: '/v1/{resource=projects/*/locations/*/serverTlsPolicies/*}:setIamPolicy',body: '*',},{post: '/v1/{resource=projects/*/locations/*/clientTlsPolicies/*}:setIamPolicy',body: '*',}],
      },{selector: 'google.iam.v1.IAMPolicy.TestIamPermissions',post: '/v1/{resource=projects/*/locations/*/authorizationPolicies/*}:testIamPermissions',body: '*',additional_bindings: [{post: '/v1/{resource=projects/*/locations/*/addressGroups/*}:testIamPermissions',body: '*',},{post: '/v1/{resource=organizations/*/locations/*/addressGroups/*}:testIamPermissions',body: '*',},{post: '/v1/{resource=projects/*/locations/*/serverTlsPolicies/*}:testIamPermissions',body: '*',},{post: '/v1/{resource=projects/*/locations/*/clientTlsPolicies/*}:testIamPermissions',body: '*',}],
      },{selector: 'google.longrunning.Operations.CancelOperation',post: '/v1/{name=projects/*/locations/*/operations/*}:cancel',body: '*',additional_bindings: [{post: '/v1/{name=organizations/*/locations/*/operations/*}:cancel',body: '*',}],
      },{selector: 'google.longrunning.Operations.DeleteOperation',delete: '/v1/{name=projects/*/locations/*/operations/*}',additional_bindings: [{delete: '/v1/{name=organizations/*/locations/*/operations/*}',}],
      },{selector: 'google.longrunning.Operations.GetOperation',get: '/v1/{name=projects/*/locations/*/operations/*}',additional_bindings: [{get: '/v1/{name=organizations/*/locations/*/operations/*}',}],
      },{selector: 'google.longrunning.Operations.ListOperations',get: '/v1/{name=projects/*/locations/*}/operations',additional_bindings: [{get: '/v1/{name=organizations/*/locations/*}/operations',}],
      }];
    }
    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);
    const createAddressGroupResponse = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.AddressGroup') as gax.protobuf.Type;
    const createAddressGroupMetadata = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.OperationMetadata') as gax.protobuf.Type;
    const updateAddressGroupResponse = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.AddressGroup') as gax.protobuf.Type;
    const updateAddressGroupMetadata = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.OperationMetadata') as gax.protobuf.Type;
    const addAddressGroupItemsResponse = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.AddressGroup') as gax.protobuf.Type;
    const addAddressGroupItemsMetadata = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.OperationMetadata') as gax.protobuf.Type;
    const removeAddressGroupItemsResponse = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.AddressGroup') as gax.protobuf.Type;
    const removeAddressGroupItemsMetadata = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.OperationMetadata') as gax.protobuf.Type;
    const cloneAddressGroupItemsResponse = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.AddressGroup') as gax.protobuf.Type;
    const cloneAddressGroupItemsMetadata = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.OperationMetadata') as gax.protobuf.Type;
    const deleteAddressGroupResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty') as gax.protobuf.Type;
    const deleteAddressGroupMetadata = protoFilesRoot.lookup(
      '.google.cloud.networksecurity.v1.OperationMetadata') as gax.protobuf.Type;

    this.descriptors.longrunning = {
      createAddressGroup: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createAddressGroupResponse.decode.bind(createAddressGroupResponse),
        createAddressGroupMetadata.decode.bind(createAddressGroupMetadata)),
      updateAddressGroup: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateAddressGroupResponse.decode.bind(updateAddressGroupResponse),
        updateAddressGroupMetadata.decode.bind(updateAddressGroupMetadata)),
      addAddressGroupItems: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        addAddressGroupItemsResponse.decode.bind(addAddressGroupItemsResponse),
        addAddressGroupItemsMetadata.decode.bind(addAddressGroupItemsMetadata)),
      removeAddressGroupItems: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        removeAddressGroupItemsResponse.decode.bind(removeAddressGroupItemsResponse),
        removeAddressGroupItemsMetadata.decode.bind(removeAddressGroupItemsMetadata)),
      cloneAddressGroupItems: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        cloneAddressGroupItemsResponse.decode.bind(cloneAddressGroupItemsResponse),
        cloneAddressGroupItemsMetadata.decode.bind(cloneAddressGroupItemsMetadata)),
      deleteAddressGroup: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteAddressGroupResponse.decode.bind(deleteAddressGroupResponse),
        deleteAddressGroupMetadata.decode.bind(deleteAddressGroupMetadata))
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.networksecurity.v1.AddressGroupService', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.addressGroupServiceStub) {
      return this.addressGroupServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.networksecurity.v1.AddressGroupService.
    this.addressGroupServiceStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.networksecurity.v1.AddressGroupService') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.networksecurity.v1.AddressGroupService,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const addressGroupServiceStubMethods =
        ['listAddressGroups', 'getAddressGroup', 'createAddressGroup', 'updateAddressGroup', 'addAddressGroupItems', 'removeAddressGroupItems', 'cloneAddressGroupItems', 'deleteAddressGroup', 'listAddressGroupReferences'];
    for (const methodName of addressGroupServiceStubMethods) {
      const callPromise = this.addressGroupServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.addressGroupServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'networksecurity.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (typeof process === 'object' && typeof process.emitWarning === 'function') {
      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');
    }
    return 'networksecurity.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Gets details of a single address group.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. A name of the AddressGroup to get. Must be in the format
 *   `projects/* /locations/{location}/addressGroups/*`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link protos.google.cloud.networksecurity.v1.AddressGroup|AddressGroup}.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.get_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_GetAddressGroup_async
 */
  getAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.networksecurity.v1.IAddressGroup,
        protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|undefined, {}|undefined
      ]>;
  getAddressGroup(
      request: protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.networksecurity.v1.IAddressGroup,
          protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|null|undefined,
          {}|null|undefined>): void;
  getAddressGroup(
      request: protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest,
      callback: Callback<
          protos.google.cloud.networksecurity.v1.IAddressGroup,
          protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|null|undefined,
          {}|null|undefined>): void;
  getAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.networksecurity.v1.IAddressGroup,
          protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.networksecurity.v1.IAddressGroup,
          protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.networksecurity.v1.IAddressGroup,
        protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    this._log.info('getAddressGroup request %j', request);
    const wrappedCallback: Callback<
        protos.google.cloud.networksecurity.v1.IAddressGroup,
        protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|null|undefined,
        {}|null|undefined>|undefined = callback
      ? (error, response, options, rawResponse) => {
          this._log.info('getAddressGroup response %j', response);
          callback!(error, response, options, rawResponse); // We verified callback above.
        }
      : undefined;
    return this.innerApiCalls.getAddressGroup(request, options, wrappedCallback)
      ?.then(([response, options, rawResponse]: [
        protos.google.cloud.networksecurity.v1.IAddressGroup,
        protos.google.cloud.networksecurity.v1.IGetAddressGroupRequest|undefined,
        {}|undefined
      ]) => {
        this._log.info('getAddressGroup response %j', response);
        return [response, options, rawResponse];
      }).catch((error: any) => {
        if (error && 'statusDetails' in error && error.statusDetails instanceof Array) {
          const protos = this._gaxModule.protobuf.Root.fromJSON(jsonProtos) as unknown as gax.protobuf.Type;
          error.statusDetails = decodeAnyProtosInArray(error.statusDetails, protos);
        }
        throw error;
      });
  }

/**
 * Creates a new address group in a given project and location.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource of the AddressGroup. Must be in the
 *   format `projects/* /locations/{location}`.
 * @param {string} request.addressGroupId
 *   Required. Short name of the AddressGroup resource to be created.
 *   This value should be 1-63 characters long, containing only
 *   letters, numbers, hyphens, and underscores, and should not start
 *   with a number. E.g. "authz_policy".
 * @param {google.cloud.networksecurity.v1.AddressGroup} request.addressGroup
 *   Required. AddressGroup resource to be created.
 * @param {string} [request.requestId]
 *   Optional. An optional request ID to identify requests. Specify a unique
 *   request ID so that if you must retry your request, the server will know to
 *   ignore the request if it has already been completed. The server will
 *   guarantee that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and
 *   the request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.create_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_CreateAddressGroup_async
 */
  createAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.ICreateAddressGroupRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  createAddressGroup(
      request: protos.google.cloud.networksecurity.v1.ICreateAddressGroupRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  createAddressGroup(
      request: protos.google.cloud.networksecurity.v1.ICreateAddressGroupRequest,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  createAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.ICreateAddressGroupRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>|undefined = callback
      ? (error, response, rawResponse, _) => {
          this._log.info('createAddressGroup response %j', rawResponse);
          callback!(error, response, rawResponse, _); // We verified callback above.
        }
      : undefined;
    this._log.info('createAddressGroup request %j', request);
    return this.innerApiCalls.createAddressGroup(request, options, wrappedCallback)
    ?.then(([response, rawResponse, _]: [
      LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
      protos.google.longrunning.IOperation|undefined, {}|undefined
    ]) => {
      this._log.info('createAddressGroup response %j', rawResponse);
      return [response, rawResponse, _];
    });
  }
/**
 * Check the status of the long running operation returned by `createAddressGroup()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.create_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_CreateAddressGroup_async
 */
  async checkCreateAddressGroupProgress(name: string): Promise<LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>>{
    this._log.info('createAddressGroup long-running');
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createAddressGroup, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>;
  }
/**
 * Updates the parameters of a single address group.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.protobuf.FieldMask} [request.updateMask]
 *   Optional. Field mask is used to specify the fields to be overwritten in the
 *   AddressGroup resource by the update.
 *   The fields specified in the update_mask are relative to the resource, not
 *   the full request. A field will be overwritten if it is in the mask. If the
 *   user does not provide a mask then all fields will be overwritten.
 * @param {google.cloud.networksecurity.v1.AddressGroup} request.addressGroup
 *   Required. Updated AddressGroup resource.
 * @param {string} [request.requestId]
 *   Optional. An optional request ID to identify requests. Specify a unique
 *   request ID so that if you must retry your request, the server will know to
 *   ignore the request if it has already been completed. The server will
 *   guarantee that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and
 *   the request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.update_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_UpdateAddressGroup_async
 */
  updateAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.IUpdateAddressGroupRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  updateAddressGroup(
      request: protos.google.cloud.networksecurity.v1.IUpdateAddressGroupRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  updateAddressGroup(
      request: protos.google.cloud.networksecurity.v1.IUpdateAddressGroupRequest,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  updateAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.IUpdateAddressGroupRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group.name': request.addressGroup!.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>|undefined = callback
      ? (error, response, rawResponse, _) => {
          this._log.info('updateAddressGroup response %j', rawResponse);
          callback!(error, response, rawResponse, _); // We verified callback above.
        }
      : undefined;
    this._log.info('updateAddressGroup request %j', request);
    return this.innerApiCalls.updateAddressGroup(request, options, wrappedCallback)
    ?.then(([response, rawResponse, _]: [
      LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
      protos.google.longrunning.IOperation|undefined, {}|undefined
    ]) => {
      this._log.info('updateAddressGroup response %j', rawResponse);
      return [response, rawResponse, _];
    });
  }
/**
 * Check the status of the long running operation returned by `updateAddressGroup()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.update_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_UpdateAddressGroup_async
 */
  async checkUpdateAddressGroupProgress(name: string): Promise<LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>>{
    this._log.info('updateAddressGroup long-running');
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateAddressGroup, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>;
  }
/**
 * Adds items to an address group.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.addressGroup
 *   Required. A name of the AddressGroup to add items to. Must be in the format
 *   `projects|organization/* /locations/{location}/addressGroups/*`.
 * @param {string[]} request.items
 *   Required. List of items to add.
 * @param {string} [request.requestId]
 *   Optional. An optional request ID to identify requests. Specify a unique
 *   request ID so that if you must retry your request, the server will know to
 *   ignore the request if it has already been completed. The server will
 *   guarantee that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and
 *   the request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.add_address_group_items.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_AddAddressGroupItems_async
 */
  addAddressGroupItems(
      request?: protos.google.cloud.networksecurity.v1.IAddAddressGroupItemsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  addAddressGroupItems(
      request: protos.google.cloud.networksecurity.v1.IAddAddressGroupItemsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  addAddressGroupItems(
      request: protos.google.cloud.networksecurity.v1.IAddAddressGroupItemsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  addAddressGroupItems(
      request?: protos.google.cloud.networksecurity.v1.IAddAddressGroupItemsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group': request.addressGroup ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>|undefined = callback
      ? (error, response, rawResponse, _) => {
          this._log.info('addAddressGroupItems response %j', rawResponse);
          callback!(error, response, rawResponse, _); // We verified callback above.
        }
      : undefined;
    this._log.info('addAddressGroupItems request %j', request);
    return this.innerApiCalls.addAddressGroupItems(request, options, wrappedCallback)
    ?.then(([response, rawResponse, _]: [
      LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
      protos.google.longrunning.IOperation|undefined, {}|undefined
    ]) => {
      this._log.info('addAddressGroupItems response %j', rawResponse);
      return [response, rawResponse, _];
    });
  }
/**
 * Check the status of the long running operation returned by `addAddressGroupItems()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.add_address_group_items.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_AddAddressGroupItems_async
 */
  async checkAddAddressGroupItemsProgress(name: string): Promise<LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>>{
    this._log.info('addAddressGroupItems long-running');
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.addAddressGroupItems, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>;
  }
/**
 * Removes items from an address group.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.addressGroup
 *   Required. A name of the AddressGroup to remove items from. Must be in the
 *   format `projects|organization/* /locations/{location}/addressGroups/*`.
 * @param {string[]} request.items
 *   Required. List of items to remove.
 * @param {string} [request.requestId]
 *   Optional. An optional request ID to identify requests. Specify a unique
 *   request ID so that if you must retry your request, the server will know to
 *   ignore the request if it has already been completed. The server will
 *   guarantee that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and
 *   the request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.remove_address_group_items.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_RemoveAddressGroupItems_async
 */
  removeAddressGroupItems(
      request?: protos.google.cloud.networksecurity.v1.IRemoveAddressGroupItemsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  removeAddressGroupItems(
      request: protos.google.cloud.networksecurity.v1.IRemoveAddressGroupItemsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  removeAddressGroupItems(
      request: protos.google.cloud.networksecurity.v1.IRemoveAddressGroupItemsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  removeAddressGroupItems(
      request?: protos.google.cloud.networksecurity.v1.IRemoveAddressGroupItemsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group': request.addressGroup ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>|undefined = callback
      ? (error, response, rawResponse, _) => {
          this._log.info('removeAddressGroupItems response %j', rawResponse);
          callback!(error, response, rawResponse, _); // We verified callback above.
        }
      : undefined;
    this._log.info('removeAddressGroupItems request %j', request);
    return this.innerApiCalls.removeAddressGroupItems(request, options, wrappedCallback)
    ?.then(([response, rawResponse, _]: [
      LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
      protos.google.longrunning.IOperation|undefined, {}|undefined
    ]) => {
      this._log.info('removeAddressGroupItems response %j', rawResponse);
      return [response, rawResponse, _];
    });
  }
/**
 * Check the status of the long running operation returned by `removeAddressGroupItems()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.remove_address_group_items.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_RemoveAddressGroupItems_async
 */
  async checkRemoveAddressGroupItemsProgress(name: string): Promise<LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>>{
    this._log.info('removeAddressGroupItems long-running');
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.removeAddressGroupItems, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>;
  }
/**
 * Clones items from one address group to another.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.addressGroup
 *   Required. A name of the AddressGroup to clone items to. Must be in the
 *   format `projects|organization/* /locations/{location}/addressGroups/*`.
 * @param {string} request.sourceAddressGroup
 *   Required. Source address group to clone items from.
 * @param {string} [request.requestId]
 *   Optional. An optional request ID to identify requests. Specify a unique
 *   request ID so that if you must retry your request, the server will know to
 *   ignore the request if it has already been completed. The server will
 *   guarantee that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and
 *   the request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.clone_address_group_items.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_CloneAddressGroupItems_async
 */
  cloneAddressGroupItems(
      request?: protos.google.cloud.networksecurity.v1.ICloneAddressGroupItemsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  cloneAddressGroupItems(
      request: protos.google.cloud.networksecurity.v1.ICloneAddressGroupItemsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  cloneAddressGroupItems(
      request: protos.google.cloud.networksecurity.v1.ICloneAddressGroupItemsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  cloneAddressGroupItems(
      request?: protos.google.cloud.networksecurity.v1.ICloneAddressGroupItemsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group': request.addressGroup ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: Callback<
          LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>|undefined = callback
      ? (error, response, rawResponse, _) => {
          this._log.info('cloneAddressGroupItems response %j', rawResponse);
          callback!(error, response, rawResponse, _); // We verified callback above.
        }
      : undefined;
    this._log.info('cloneAddressGroupItems request %j', request);
    return this.innerApiCalls.cloneAddressGroupItems(request, options, wrappedCallback)
    ?.then(([response, rawResponse, _]: [
      LROperation<protos.google.cloud.networksecurity.v1.IAddressGroup, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
      protos.google.longrunning.IOperation|undefined, {}|undefined
    ]) => {
      this._log.info('cloneAddressGroupItems response %j', rawResponse);
      return [response, rawResponse, _];
    });
  }
/**
 * Check the status of the long running operation returned by `cloneAddressGroupItems()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.clone_address_group_items.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_CloneAddressGroupItems_async
 */
  async checkCloneAddressGroupItemsProgress(name: string): Promise<LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>>{
    this._log.info('cloneAddressGroupItems long-running');
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.cloneAddressGroupItems, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.networksecurity.v1.AddressGroup, protos.google.cloud.networksecurity.v1.OperationMetadata>;
  }
/**
 * Deletes a single address group.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. A name of the AddressGroup to delete. Must be in the format
 *   `projects/* /locations/{location}/addressGroups/*`.
 * @param {string} [request.requestId]
 *   Optional. An optional request ID to identify requests. Specify a unique
 *   request ID so that if you must retry your request, the server will know to
 *   ignore the request if it has already been completed. The server will
 *   guarantee that for at least 60 minutes since the first request.
 *
 *   For example, consider a situation where you make an initial request and
 *   the request times out. If you make the request again with the same request
 *   ID, the server can check if original operation with the same request ID
 *   was received, and if so, will ignore the second request. This prevents
 *   clients from accidentally creating duplicate commitments.
 *
 *   The request ID must be a valid UUID with the exception that zero UUID is
 *   not supported (00000000-0000-0000-0000-000000000000).
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.delete_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_DeleteAddressGroup_async
 */
  deleteAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.IDeleteAddressGroupRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  deleteAddressGroup(
      request: protos.google.cloud.networksecurity.v1.IDeleteAddressGroupRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  deleteAddressGroup(
      request: protos.google.cloud.networksecurity.v1.IDeleteAddressGroupRequest,
      callback: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  deleteAddressGroup(
      request?: protos.google.cloud.networksecurity.v1.IDeleteAddressGroupRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: Callback<
          LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>|undefined = callback
      ? (error, response, rawResponse, _) => {
          this._log.info('deleteAddressGroup response %j', rawResponse);
          callback!(error, response, rawResponse, _); // We verified callback above.
        }
      : undefined;
    this._log.info('deleteAddressGroup request %j', request);
    return this.innerApiCalls.deleteAddressGroup(request, options, wrappedCallback)
    ?.then(([response, rawResponse, _]: [
      LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.networksecurity.v1.IOperationMetadata>,
      protos.google.longrunning.IOperation|undefined, {}|undefined
    ]) => {
      this._log.info('deleteAddressGroup response %j', rawResponse);
      return [response, rawResponse, _];
    });
  }
/**
 * Check the status of the long running operation returned by `deleteAddressGroup()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.delete_address_group.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_DeleteAddressGroup_async
 */
  async checkDeleteAddressGroupProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.networksecurity.v1.OperationMetadata>>{
    this._log.info('deleteAddressGroup long-running');
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteAddressGroup, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.protobuf.Empty, protos.google.cloud.networksecurity.v1.OperationMetadata>;
  }
 /**
 * Lists address groups in a given project and location.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The project and location from which the AddressGroups
 *   should be listed, specified in the format
 *   `projects/* /locations/{location}`.
 * @param {number} request.pageSize
 *   Maximum number of AddressGroups to return per call.
 * @param {string} request.pageToken
 *   The value returned by the last
 *   `ListAddressGroupsResponse` Indicates that this is a
 *   continuation of a prior `ListAddressGroups` call, and
 *   that the system should return the next page of data.
 * @param {boolean} [request.returnPartialSuccess]
 *   Optional. If true, allow partial responses for multi-regional Aggregated
 *   List requests.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.networksecurity.v1.AddressGroup|AddressGroup}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listAddressGroupsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listAddressGroups(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.networksecurity.v1.IAddressGroup[],
        protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest|null,
        protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse
      ]>;
  listAddressGroups(
      request: protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.IAddressGroup>): void;
  listAddressGroups(
      request: protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      callback: PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.IAddressGroup>): void;
  listAddressGroups(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.IAddressGroup>,
      callback?: PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.IAddressGroup>):
      Promise<[
        protos.google.cloud.networksecurity.v1.IAddressGroup[],
        protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest|null,
        protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse|null|undefined,
      protos.google.cloud.networksecurity.v1.IAddressGroup>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listAddressGroups values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listAddressGroups request %j', request);
    return this.innerApiCalls
      .listAddressGroups(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.networksecurity.v1.IAddressGroup[],
        protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest|null,
        protos.google.cloud.networksecurity.v1.IListAddressGroupsResponse
      ]) => {
        this._log.info('listAddressGroups values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listAddressGroups`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The project and location from which the AddressGroups
 *   should be listed, specified in the format
 *   `projects/* /locations/{location}`.
 * @param {number} request.pageSize
 *   Maximum number of AddressGroups to return per call.
 * @param {string} request.pageToken
 *   The value returned by the last
 *   `ListAddressGroupsResponse` Indicates that this is a
 *   continuation of a prior `ListAddressGroups` call, and
 *   that the system should return the next page of data.
 * @param {boolean} [request.returnPartialSuccess]
 *   Optional. If true, allow partial responses for multi-regional Aggregated
 *   List requests.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.networksecurity.v1.AddressGroup|AddressGroup} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listAddressGroupsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listAddressGroupsStream(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listAddressGroups'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listAddressGroups stream %j', request);
    return this.descriptors.page.listAddressGroups.createStream(
      this.innerApiCalls.listAddressGroups as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listAddressGroups`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The project and location from which the AddressGroups
 *   should be listed, specified in the format
 *   `projects/* /locations/{location}`.
 * @param {number} request.pageSize
 *   Maximum number of AddressGroups to return per call.
 * @param {string} request.pageToken
 *   The value returned by the last
 *   `ListAddressGroupsResponse` Indicates that this is a
 *   continuation of a prior `ListAddressGroups` call, and
 *   that the system should return the next page of data.
 * @param {boolean} [request.returnPartialSuccess]
 *   Optional. If true, allow partial responses for multi-regional Aggregated
 *   List requests.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.networksecurity.v1.AddressGroup|AddressGroup}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.list_address_groups.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_ListAddressGroups_async
 */
  listAddressGroupsAsync(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.networksecurity.v1.IAddressGroup>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listAddressGroups'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listAddressGroups iterate %j', request);
    return this.descriptors.page.listAddressGroups.asyncIterate(
      this.innerApiCalls['listAddressGroups'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.networksecurity.v1.IAddressGroup>;
  }
 /**
 * Lists references of an address group.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.addressGroup
 *   Required. A name of the AddressGroup to clone items to. Must be in the
 *   format `projects|organization/* /locations/{location}/addressGroups/*`.
 * @param {number} request.pageSize
 *   The maximum number of references to return.  If unspecified, server
 *   will pick an appropriate default. Server may return fewer items than
 *   requested. A caller should only rely on response's
 *   {@link protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.next_page_token|next_page_token}
 *   to determine if there are more AddressGroupUsers left to be queried.
 * @param {string} request.pageToken
 *   The next_page_token value returned from a previous List request,
 *   if any.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of {@link protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.AddressGroupReference|AddressGroupReference}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listAddressGroupReferencesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listAddressGroupReferences(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference[],
        protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest|null,
        protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse
      ]>;
  listAddressGroupReferences(
      request: protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>): void;
  listAddressGroupReferences(
      request: protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      callback: PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>): void;
  listAddressGroupReferences(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>,
      callback?: PaginationCallback<
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
          protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse|null|undefined,
          protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>):
      Promise<[
        protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference[],
        protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest|null,
        protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group': request.addressGroup ?? '',
    });
    this.initialize().catch(err => {throw err});
    const wrappedCallback: PaginationCallback<
      protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse|null|undefined,
      protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>|undefined = callback
      ? (error, values, nextPageRequest, rawResponse) => {
          this._log.info('listAddressGroupReferences values %j', values);
          callback!(error, values, nextPageRequest, rawResponse); // We verified callback above.
        }
      : undefined;
    this._log.info('listAddressGroupReferences request %j', request);
    return this.innerApiCalls
      .listAddressGroupReferences(request, options, wrappedCallback)
      ?.then(([response, input, output]: [
        protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference[],
        protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest|null,
        protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesResponse
      ]) => {
        this._log.info('listAddressGroupReferences values %j', response);
        return [response, input, output];
      });
  }

/**
 * Equivalent to `listAddressGroupReferences`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.addressGroup
 *   Required. A name of the AddressGroup to clone items to. Must be in the
 *   format `projects|organization/* /locations/{location}/addressGroups/*`.
 * @param {number} request.pageSize
 *   The maximum number of references to return.  If unspecified, server
 *   will pick an appropriate default. Server may return fewer items than
 *   requested. A caller should only rely on response's
 *   {@link protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.next_page_token|next_page_token}
 *   to determine if there are more AddressGroupUsers left to be queried.
 * @param {string} request.pageToken
 *   The next_page_token value returned from a previous List request,
 *   if any.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing {@link protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.AddressGroupReference|AddressGroupReference} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listAddressGroupReferencesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 */
  listAddressGroupReferencesStream(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group': request.addressGroup ?? '',
    });
    const defaultCallSettings = this._defaults['listAddressGroupReferences'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listAddressGroupReferences stream %j', request);
    return this.descriptors.page.listAddressGroupReferences.createStream(
      this.innerApiCalls.listAddressGroupReferences as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listAddressGroupReferences`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.addressGroup
 *   Required. A name of the AddressGroup to clone items to. Must be in the
 *   format `projects|organization/* /locations/{location}/addressGroups/*`.
 * @param {number} request.pageSize
 *   The maximum number of references to return.  If unspecified, server
 *   will pick an appropriate default. Server may return fewer items than
 *   requested. A caller should only rely on response's
 *   {@link protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.next_page_token|next_page_token}
 *   to determine if there are more AddressGroupUsers left to be queried.
 * @param {string} request.pageToken
 *   The next_page_token value returned from a previous List request,
 *   if any.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
 *   When you iterate the returned iterable, each element will be an object representing
 *   {@link protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.AddressGroupReference|AddressGroupReference}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/address_group_service.list_address_group_references.js</caption>
 * region_tag:networksecurity_v1_generated_AddressGroupService_ListAddressGroupReferences_async
 */
  listAddressGroupReferencesAsync(
      request?: protos.google.cloud.networksecurity.v1.IListAddressGroupReferencesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'address_group': request.addressGroup ?? '',
    });
    const defaultCallSettings = this._defaults['listAddressGroupReferences'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize().catch(err => {throw err});
    this._log.info('listAddressGroupReferences iterate %j', request);
    return this.descriptors.page.listAddressGroupReferences.asyncIterate(
      this.innerApiCalls['listAddressGroupReferences'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.networksecurity.v1.ListAddressGroupReferencesResponse.IAddressGroupReference>;
  }
/**
 * Gets the access control policy for a resource. Returns an empty policy
 * if the resource exists and does not have a policy set.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {Object} [request.options]
 *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *   `GetIamPolicy`. This field is only used by Cloud IAM.
 *
 *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<[IamProtos.google.iam.v1.Policy]> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

/**
 * Returns permissions that a caller has on the specified resource. If the
 * resource does not exist, this will return an empty set of
 * permissions, not a NOT_FOUND error.
 *
 * Note: This operation is designed to be used for building
 * permission-aware UIs and command-line tools, not for authorization
 * checking. This operation may "fail open" without warning.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy detail is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {string[]} request.permissions
 *   The set of permissions to check for the `resource`. Permissions with
 *   wildcards (such as '*' or 'storage.*') are not allowed. For more
 *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<[IamProtos.google.iam.v1.Policy]> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

/**
 * Returns permissions that a caller has on the specified resource. If the
 * resource does not exist, this will return an empty set of
 * permissions, not a NOT_FOUND error.
 *
 * Note: This operation is designed to be used for building
 * permission-aware UIs and command-line tools, not for authorization
 * checking. This operation may "fail open" without warning.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy detail is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {string[]} request.permissions
 *   The set of permissions to check for the `resource`. Permissions with
 *   wildcards (such as '*' or 'storage.*') are not allowed. For more
 *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 *
 */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<[IamProtos.google.iam.v1.TestIamPermissionsResponse]> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

/**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

/**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

/**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   *   for the details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   *   {@link google.longrunning.Operation | google.longrunning.Operation}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * {@link google.longrunning.Operation | google.longrunning.Operation}.
   * The promise has a method named "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
     let options: gax.CallOptions;
     if (typeof optionsOrCallback === 'function' && callback === undefined) {
       callback = optionsOrCallback;
       options = {};
     } else {
       options = optionsOrCallback as gax.CallOptions;
     }
     options = options || {};
     options.otherArgs = options.otherArgs || {};
     options.otherArgs.headers = options.otherArgs.headers || {};
     options.otherArgs.headers['x-goog-request-params'] =
       this._gaxModule.routingHeader.fromParams({
         name: request.name ?? '',
       });
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.IOperation> {
     options = options || {};
     options.otherArgs = options.otherArgs || {};
     options.otherArgs.headers = options.otherArgs.headers || {};
     options.otherArgs.headers['x-goog-request-params'] =
       this._gaxModule.routingHeader.fromParams({
         name: request.name ?? '',
       });
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
   cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.CancelOperationRequest,
          protos.google.protobuf.Empty,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
     let options: gax.CallOptions;
     if (typeof optionsOrCallback === 'function' && callback === undefined) {
       callback = optionsOrCallback;
       options = {};
     } else {
       options = optionsOrCallback as gax.CallOptions;
     }
     options = options || {};
     options.otherArgs = options.otherArgs || {};
     options.otherArgs.headers = options.otherArgs.headers || {};
     options.otherArgs.headers['x-goog-request-params'] =
       this._gaxModule.routingHeader.fromParams({
         name: request.name ?? '',
       });
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   * for the details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    optionsOrCallback?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
     let options: gax.CallOptions;
     if (typeof optionsOrCallback === 'function' && callback === undefined) {
       callback = optionsOrCallback;
       options = {};
     } else {
       options = optionsOrCallback as gax.CallOptions;
     }
     options = options || {};
     options.otherArgs = options.otherArgs || {};
     options.otherArgs.headers = options.otherArgs.headers || {};
     options.otherArgs.headers['x-goog-request-params'] =
       this._gaxModule.routingHeader.fromParams({
         name: request.name ?? '',
       });
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified authorizationPolicy resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} authorization_policy
   * @returns {string} Resource name string.
   */
  authorizationPolicyPath(project:string,location:string,authorizationPolicy:string) {
    return this.pathTemplates.authorizationPolicyPathTemplate.render({
      project: project,
      location: location,
      authorization_policy: authorizationPolicy,
    });
  }

  /**
   * Parse the project from AuthorizationPolicy resource.
   *
   * @param {string} authorizationPolicyName
   *   A fully-qualified path representing AuthorizationPolicy resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAuthorizationPolicyName(authorizationPolicyName: string) {
    return this.pathTemplates.authorizationPolicyPathTemplate.match(authorizationPolicyName).project;
  }

  /**
   * Parse the location from AuthorizationPolicy resource.
   *
   * @param {string} authorizationPolicyName
   *   A fully-qualified path representing AuthorizationPolicy resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAuthorizationPolicyName(authorizationPolicyName: string) {
    return this.pathTemplates.authorizationPolicyPathTemplate.match(authorizationPolicyName).location;
  }

  /**
   * Parse the authorization_policy from AuthorizationPolicy resource.
   *
   * @param {string} authorizationPolicyName
   *   A fully-qualified path representing AuthorizationPolicy resource.
   * @returns {string} A string representing the authorization_policy.
   */
  matchAuthorizationPolicyFromAuthorizationPolicyName(authorizationPolicyName: string) {
    return this.pathTemplates.authorizationPolicyPathTemplate.match(authorizationPolicyName).authorization_policy;
  }

  /**
   * Return a fully-qualified clientTlsPolicy resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} client_tls_policy
   * @returns {string} Resource name string.
   */
  clientTlsPolicyPath(project:string,location:string,clientTlsPolicy:string) {
    return this.pathTemplates.clientTlsPolicyPathTemplate.render({
      project: project,
      location: location,
      client_tls_policy: clientTlsPolicy,
    });
  }

  /**
   * Parse the project from ClientTlsPolicy resource.
   *
   * @param {string} clientTlsPolicyName
   *   A fully-qualified path representing ClientTlsPolicy resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromClientTlsPolicyName(clientTlsPolicyName: string) {
    return this.pathTemplates.clientTlsPolicyPathTemplate.match(clientTlsPolicyName).project;
  }

  /**
   * Parse the location from ClientTlsPolicy resource.
   *
   * @param {string} clientTlsPolicyName
   *   A fully-qualified path representing ClientTlsPolicy resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromClientTlsPolicyName(clientTlsPolicyName: string) {
    return this.pathTemplates.clientTlsPolicyPathTemplate.match(clientTlsPolicyName).location;
  }

  /**
   * Parse the client_tls_policy from ClientTlsPolicy resource.
   *
   * @param {string} clientTlsPolicyName
   *   A fully-qualified path representing ClientTlsPolicy resource.
   * @returns {string} A string representing the client_tls_policy.
   */
  matchClientTlsPolicyFromClientTlsPolicyName(clientTlsPolicyName: string) {
    return this.pathTemplates.clientTlsPolicyPathTemplate.match(clientTlsPolicyName).client_tls_policy;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project:string,location:string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified organizationLocationAddressGroup resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} address_group
   * @returns {string} Resource name string.
   */
  organizationLocationAddressGroupPath(organization:string,location:string,addressGroup:string) {
    return this.pathTemplates.organizationLocationAddressGroupPathTemplate.render({
      organization: organization,
      location: location,
      address_group: addressGroup,
    });
  }

  /**
   * Parse the organization from OrganizationLocationAddressGroup resource.
   *
   * @param {string} organizationLocationAddressGroupName
   *   A fully-qualified path representing organization_location_address_group resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationAddressGroupName(organizationLocationAddressGroupName: string) {
    return this.pathTemplates.organizationLocationAddressGroupPathTemplate.match(organizationLocationAddressGroupName).organization;
  }

  /**
   * Parse the location from OrganizationLocationAddressGroup resource.
   *
   * @param {string} organizationLocationAddressGroupName
   *   A fully-qualified path representing organization_location_address_group resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationAddressGroupName(organizationLocationAddressGroupName: string) {
    return this.pathTemplates.organizationLocationAddressGroupPathTemplate.match(organizationLocationAddressGroupName).location;
  }

  /**
   * Parse the address_group from OrganizationLocationAddressGroup resource.
   *
   * @param {string} organizationLocationAddressGroupName
   *   A fully-qualified path representing organization_location_address_group resource.
   * @returns {string} A string representing the address_group.
   */
  matchAddressGroupFromOrganizationLocationAddressGroupName(organizationLocationAddressGroupName: string) {
    return this.pathTemplates.organizationLocationAddressGroupPathTemplate.match(organizationLocationAddressGroupName).address_group;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified projectLocationAddressGroup resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} address_group
   * @returns {string} Resource name string.
   */
  projectLocationAddressGroupPath(project:string,location:string,addressGroup:string) {
    return this.pathTemplates.projectLocationAddressGroupPathTemplate.render({
      project: project,
      location: location,
      address_group: addressGroup,
    });
  }

  /**
   * Parse the project from ProjectLocationAddressGroup resource.
   *
   * @param {string} projectLocationAddressGroupName
   *   A fully-qualified path representing project_location_address_group resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationAddressGroupName(projectLocationAddressGroupName: string) {
    return this.pathTemplates.projectLocationAddressGroupPathTemplate.match(projectLocationAddressGroupName).project;
  }

  /**
   * Parse the location from ProjectLocationAddressGroup resource.
   *
   * @param {string} projectLocationAddressGroupName
   *   A fully-qualified path representing project_location_address_group resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationAddressGroupName(projectLocationAddressGroupName: string) {
    return this.pathTemplates.projectLocationAddressGroupPathTemplate.match(projectLocationAddressGroupName).location;
  }

  /**
   * Parse the address_group from ProjectLocationAddressGroup resource.
   *
   * @param {string} projectLocationAddressGroupName
   *   A fully-qualified path representing project_location_address_group resource.
   * @returns {string} A string representing the address_group.
   */
  matchAddressGroupFromProjectLocationAddressGroupName(projectLocationAddressGroupName: string) {
    return this.pathTemplates.projectLocationAddressGroupPathTemplate.match(projectLocationAddressGroupName).address_group;
  }

  /**
   * Return a fully-qualified serverTlsPolicy resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} server_tls_policy
   * @returns {string} Resource name string.
   */
  serverTlsPolicyPath(project:string,location:string,serverTlsPolicy:string) {
    return this.pathTemplates.serverTlsPolicyPathTemplate.render({
      project: project,
      location: location,
      server_tls_policy: serverTlsPolicy,
    });
  }

  /**
   * Parse the project from ServerTlsPolicy resource.
   *
   * @param {string} serverTlsPolicyName
   *   A fully-qualified path representing ServerTlsPolicy resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromServerTlsPolicyName(serverTlsPolicyName: string) {
    return this.pathTemplates.serverTlsPolicyPathTemplate.match(serverTlsPolicyName).project;
  }

  /**
   * Parse the location from ServerTlsPolicy resource.
   *
   * @param {string} serverTlsPolicyName
   *   A fully-qualified path representing ServerTlsPolicy resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromServerTlsPolicyName(serverTlsPolicyName: string) {
    return this.pathTemplates.serverTlsPolicyPathTemplate.match(serverTlsPolicyName).location;
  }

  /**
   * Parse the server_tls_policy from ServerTlsPolicy resource.
   *
   * @param {string} serverTlsPolicyName
   *   A fully-qualified path representing ServerTlsPolicy resource.
   * @returns {string} A string representing the server_tls_policy.
   */
  matchServerTlsPolicyFromServerTlsPolicyName(serverTlsPolicyName: string) {
    return this.pathTemplates.serverTlsPolicyPathTemplate.match(serverTlsPolicyName).server_tls_policy;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.addressGroupServiceStub && !this._terminated) {
      return this.addressGroupServiceStub.then(stub => {
        this._log.info('ending gRPC channel');
        this._terminated = true;
        stub.close();
        this.iamClient.close().catch(err => {throw err});
        this.locationsClient.close().catch(err => {throw err});
        void this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}