{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "managedkafka": {
              "nested": {
                "schemaregistry": {
                  "nested": {
                    "v1": {
                      "options": {
                        "csharp_namespace": "Google.Cloud.ManagedKafka.SchemaRegistry.V1",
                        "go_package": "cloud.google.com/go/managedkafka/schemaregistry/apiv1/schemaregistrypb;schemaregistrypb",
                        "java_multiple_files": true,
                        "java_outer_classname": "SchemaRegistryResourcesProto",
                        "java_package": "com.google.cloud.managedkafka.schemaregistry.v1",
                        "php_namespace": "Google\\Cloud\\ManagedKafka\\SchemaRegistry\\V1",
                        "ruby_package": "Google::Cloud::ManagedKafka::SchemaRegistry::V1"
                      },
                      "nested": {
                        "ManagedSchemaRegistry": {
                          "options": {
                            "(google.api.default_host)": "managedkafka.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                          },
                          "methods": {
                            "GetSchemaRegistry": {
                              "requestType": "GetSchemaRegistryRequest",
                              "responseType": "SchemaRegistry",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListSchemaRegistries": {
                              "requestType": "ListSchemaRegistriesRequest",
                              "responseType": "ListSchemaRegistriesResponse",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/schemaRegistries",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*}/schemaRegistries"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "CreateSchemaRegistry": {
                              "requestType": "CreateSchemaRegistryRequest",
                              "responseType": "SchemaRegistry",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/schemaRegistries",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent,schema_registry"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/locations/*}/schemaRegistries",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,schema_registry"
                                }
                              ]
                            },
                            "DeleteSchemaRegistry": {
                              "requestType": "DeleteSchemaRegistryRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "GetContext": {
                              "requestType": "GetContextRequest",
                              "responseType": "Context",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListContexts": {
                              "requestType": "ListContextsRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*}/contexts",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*}/contexts"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetSchema": {
                              "requestType": "GetSchemaRequest",
                              "responseType": "Schema",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/schemas/**}",
                                "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/schemas/**}",
                                    "additional_bindings": {
                                      "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "GetRawSchema": {
                              "requestType": "GetSchemaRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/schemas/**}/schema",
                                "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/schema",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/schemas/**}/schema",
                                    "additional_bindings": {
                                      "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/schema"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListSchemaVersions": {
                              "requestType": "ListSchemaVersionsRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/schemas/**}/versions",
                                "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/versions",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/schemas/**}/versions",
                                    "additional_bindings": {
                                      "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/versions"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListSchemaTypes": {
                              "requestType": "ListSchemaTypesRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*}/schemas/types",
                                "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*}/schemas/types",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*}/schemas/types",
                                    "additional_bindings": {
                                      "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*}/schemas/types"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "ListSubjects": {
                              "requestType": "ListSubjectsRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*}/subjects",
                                "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*}/subjects",
                                "(google.api.method_signature)": "parent,subject_prefix,deleted"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*}/subjects",
                                    "additional_bindings": {
                                      "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*}/subjects"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,subject_prefix,deleted"
                                }
                              ]
                            },
                            "ListSubjectsBySchemaId": {
                              "requestType": "ListSubjectsBySchemaIdRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/schemas/**}/subjects",
                                "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/subjects",
                                "(google.api.method_signature)": "parent,subject,deleted"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/schemas/**}/subjects",
                                    "additional_bindings": {
                                      "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/schemas/**}/subjects"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,subject,deleted"
                                }
                              ]
                            },
                            "DeleteSubject": {
                              "requestType": "DeleteSubjectRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*}",
                                "(google.api.http).additional_bindings.delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*}",
                                    "additional_bindings": {
                                      "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "LookupVersion": {
                              "requestType": "LookupVersionRequest",
                              "responseType": "SchemaVersion",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "parent,schema"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,schema"
                                }
                              ]
                            },
                            "GetVersion": {
                              "requestType": "GetVersionRequest",
                              "responseType": "SchemaVersion",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}",
                                "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}",
                                    "additional_bindings": {
                                      "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "GetRawSchemaVersion": {
                              "requestType": "GetVersionRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}/schema",
                                "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}/schema",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}/schema",
                                    "additional_bindings": {
                                      "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}/schema"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListVersions": {
                              "requestType": "ListVersionsRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}/versions",
                                "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}/versions",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}/versions",
                                    "additional_bindings": {
                                      "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}/versions"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "CreateVersion": {
                              "requestType": "CreateVersionRequest",
                              "responseType": "CreateVersionResponse",
                              "options": {
                                "(google.api.http).post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}/versions",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}/versions",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "parent,version,id,schema_type,schema,references,normalize"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*}/versions",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*}/versions",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,version,id,schema_type,schema,references,normalize"
                                }
                              ]
                            },
                            "DeleteVersion": {
                              "requestType": "DeleteVersionRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}",
                                "(google.api.http).additional_bindings.delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}",
                                    "additional_bindings": {
                                      "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListReferencedSchemas": {
                              "requestType": "ListReferencedSchemasRequest",
                              "responseType": "google.api.HttpBody",
                              "options": {
                                "(google.api.http).get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}/referencedby",
                                "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}/referencedby",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/subjects/*/versions/*}/referencedby",
                                    "additional_bindings": {
                                      "get": "/v1/{parent=projects/*/locations/*/schemaRegistries/*/contexts/*/subjects/*/versions/*}/referencedby"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "CheckCompatibility": {
                              "requestType": "CheckCompatibilityRequest",
                              "responseType": "CheckCompatibilityResponse",
                              "options": {
                                "(google.api.http).post": "/v1/{name=projects/*/locations/*/schemaRegistries/*/compatibility/**}",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/compatibility/**}",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "name,schema"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v1/{name=projects/*/locations/*/schemaRegistries/*/compatibility/**}",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/compatibility/**}",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name,schema"
                                }
                              ]
                            },
                            "GetSchemaConfig": {
                              "requestType": "GetSchemaConfigRequest",
                              "responseType": "SchemaConfig",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}",
                                "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}",
                                    "additional_bindings": {
                                      "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateSchemaConfig": {
                              "requestType": "UpdateSchemaConfigRequest",
                              "responseType": "SchemaConfig",
                              "options": {
                                "(google.api.http).put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "name,compatibility"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}",
                                    "body": "*",
                                    "additional_bindings": {
                                      "put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name,compatibility"
                                }
                              ]
                            },
                            "DeleteSchemaConfig": {
                              "requestType": "DeleteSchemaConfigRequest",
                              "responseType": "SchemaConfig",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}",
                                "(google.api.http).additional_bindings.delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/config/**}",
                                    "additional_bindings": {
                                      "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/config/**}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "GetSchemaMode": {
                              "requestType": "GetSchemaModeRequest",
                              "responseType": "SchemaMode",
                              "options": {
                                "(google.api.http).get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}",
                                "(google.api.http).additional_bindings.get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}",
                                    "additional_bindings": {
                                      "get": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateSchemaMode": {
                              "requestType": "UpdateSchemaModeRequest",
                              "responseType": "SchemaMode",
                              "options": {
                                "(google.api.http).put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}",
                                "(google.api.http).additional_bindings.body": "*",
                                "(google.api.method_signature)": "name,mode"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}",
                                    "body": "*",
                                    "additional_bindings": {
                                      "put": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}",
                                      "body": "*"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name,mode"
                                }
                              ]
                            },
                            "DeleteSchemaMode": {
                              "requestType": "DeleteSchemaModeRequest",
                              "responseType": "SchemaMode",
                              "options": {
                                "(google.api.http).delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}",
                                "(google.api.http).additional_bindings.delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/mode/**}",
                                    "additional_bindings": {
                                      "delete": "/v1/{name=projects/*/locations/*/schemaRegistries/*/contexts/*/mode/**}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "GetSchemaRegistryRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaRegistry"
                              }
                            }
                          }
                        },
                        "ListSchemaRegistriesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "*"
                              }
                            }
                          }
                        },
                        "ListSchemaRegistriesResponse": {
                          "fields": {
                            "schemaRegistries": {
                              "rule": "repeated",
                              "type": "SchemaRegistry",
                              "id": 1
                            }
                          }
                        },
                        "CreateSchemaRegistryRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "*"
                              }
                            },
                            "schemaRegistryId": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "schemaRegistry": {
                              "type": "SchemaRegistry",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteSchemaRegistryRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaRegistry"
                              }
                            }
                          }
                        },
                        "GetContextRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaContext"
                              }
                            }
                          }
                        },
                        "ListContextsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaRegistry"
                              }
                            }
                          }
                        },
                        "GetSchemaRequest": {
                          "oneofs": {
                            "_subject": {
                              "oneof": [
                                "subject"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/Schema"
                              }
                            },
                            "subject": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "ListSchemaTypesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "*"
                              }
                            }
                          }
                        },
                        "ListSchemaVersionsRequest": {
                          "oneofs": {
                            "_subject": {
                              "oneof": [
                                "subject"
                              ]
                            },
                            "_deleted": {
                              "oneof": [
                                "deleted"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/Schema"
                              }
                            },
                            "subject": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "deleted": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "ListSubjectsRequest": {
                          "oneofs": {
                            "_subjectPrefix": {
                              "oneof": [
                                "subjectPrefix"
                              ]
                            },
                            "_deleted": {
                              "oneof": [
                                "deleted"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "*"
                              }
                            },
                            "subjectPrefix": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "deleted": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "ListSubjectsBySchemaIdRequest": {
                          "oneofs": {
                            "_subject": {
                              "oneof": [
                                "subject"
                              ]
                            },
                            "_deleted": {
                              "oneof": [
                                "deleted"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "*"
                              }
                            },
                            "subject": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "deleted": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "ListVersionsRequest": {
                          "oneofs": {
                            "_deleted": {
                              "oneof": [
                                "deleted"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaSubject"
                              }
                            },
                            "deleted": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "DeleteSubjectRequest": {
                          "oneofs": {
                            "_permanent": {
                              "oneof": [
                                "permanent"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaSubject"
                              }
                            },
                            "permanent": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "GetVersionRequest": {
                          "oneofs": {
                            "_deleted": {
                              "oneof": [
                                "deleted"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaVersion"
                              }
                            },
                            "deleted": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "CreateVersionRequest": {
                          "oneofs": {
                            "_version": {
                              "oneof": [
                                "version"
                              ]
                            },
                            "_id": {
                              "oneof": [
                                "id"
                              ]
                            },
                            "_schemaType": {
                              "oneof": [
                                "schemaType"
                              ]
                            },
                            "_normalize": {
                              "oneof": [
                                "normalize"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaSubject"
                              }
                            },
                            "version": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "id": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "schemaType": {
                              "type": "Schema.SchemaType",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "schema": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "references": {
                              "rule": "repeated",
                              "type": "Schema.SchemaReference",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "normalize": {
                              "type": "bool",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "CreateVersionResponse": {
                          "fields": {
                            "id": {
                              "type": "int32",
                              "id": 1
                            }
                          }
                        },
                        "LookupVersionRequest": {
                          "oneofs": {
                            "_schemaType": {
                              "oneof": [
                                "schemaType"
                              ]
                            },
                            "_normalize": {
                              "oneof": [
                                "normalize"
                              ]
                            },
                            "_deleted": {
                              "oneof": [
                                "deleted"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaSubject"
                              }
                            },
                            "schemaType": {
                              "type": "Schema.SchemaType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "schema": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "references": {
                              "rule": "repeated",
                              "type": "Schema.SchemaReference",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "normalize": {
                              "type": "bool",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "deleted": {
                              "type": "bool",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "DeleteVersionRequest": {
                          "oneofs": {
                            "_permanent": {
                              "oneof": [
                                "permanent"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaVersion"
                              }
                            },
                            "permanent": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "ListReferencedSchemasRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaVersion"
                              }
                            }
                          }
                        },
                        "CheckCompatibilityRequest": {
                          "oneofs": {
                            "_schemaType": {
                              "oneof": [
                                "schemaType"
                              ]
                            },
                            "_verbose": {
                              "oneof": [
                                "verbose"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "*"
                              }
                            },
                            "schemaType": {
                              "type": "Schema.SchemaType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "schema": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "references": {
                              "rule": "repeated",
                              "type": "Schema.SchemaReference",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "verbose": {
                              "type": "bool",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "CheckCompatibilityResponse": {
                          "fields": {
                            "isCompatible": {
                              "type": "bool",
                              "id": 1,
                              "options": {
                                "json_name": "is_compatible"
                              }
                            },
                            "messages": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetSchemaConfigRequest": {
                          "oneofs": {
                            "_defaultToGlobal": {
                              "oneof": [
                                "defaultToGlobal"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaConfig"
                              }
                            },
                            "defaultToGlobal": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "UpdateSchemaConfigRequest": {
                          "oneofs": {
                            "_compatibility": {
                              "oneof": [
                                "compatibility"
                              ]
                            },
                            "_normalize": {
                              "oneof": [
                                "normalize"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaConfig"
                              }
                            },
                            "compatibility": {
                              "type": "SchemaConfig.CompatibilityType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "proto3_optional": true
                              }
                            },
                            "normalize": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "DeleteSchemaConfigRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaConfig"
                              }
                            }
                          }
                        },
                        "GetSchemaModeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaMode"
                              }
                            }
                          }
                        },
                        "UpdateSchemaModeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaMode"
                              }
                            },
                            "mode": {
                              "type": "SchemaMode.ModeType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteSchemaModeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaMode"
                              }
                            }
                          }
                        },
                        "SchemaRegistry": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/SchemaRegistry",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}",
                            "(google.api.resource).plural": "schemaRegistries",
                            "(google.api.resource).singular": "schemaRegistry"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IDENTIFIER"
                              }
                            },
                            "contexts": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaContext"
                              }
                            }
                          }
                        },
                        "Context": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/SchemaContext",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}",
                            "(google.api.resource).plural": "contexts",
                            "(google.api.resource).singular": "context"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IDENTIFIER"
                              }
                            },
                            "subjects": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaSubject"
                              }
                            }
                          }
                        },
                        "Schema": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/Schema",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/schemas/ids/{schema}",
                            "(google.api.resource).plural": "schemas",
                            "(google.api.resource).singular": "schema"
                          },
                          "fields": {
                            "schemaType": {
                              "type": "SchemaType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "schemaPayload": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "json_name": "schema"
                              }
                            },
                            "references": {
                              "rule": "repeated",
                              "type": "SchemaReference",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "SchemaReference": {
                              "fields": {
                                "name": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "subject": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "version": {
                                  "type": "int32",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "SchemaType": {
                              "values": {
                                "SCHEMA_TYPE_UNSPECIFIED": 0,
                                "AVRO": 1,
                                "JSON": 2,
                                "PROTOBUF": 3
                              }
                            }
                          }
                        },
                        "SchemaSubject": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/SchemaSubject",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/subjects/{subject}",
                            "(google.api.resource).singular": "subject",
                            "(google.api.resource).plural": "subjects"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "IDENTIFIER"
                              }
                            },
                            "versions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "managedkafka.googleapis.com/SchemaVersion",
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "SchemaVersion": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/SchemaVersion",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/compatibility/subjects/{subject}/versions/{version}",
                            "(google.api.resource).plural": "versions",
                            "(google.api.resource).singular": "version"
                          },
                          "fields": {
                            "subject": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "versionId": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "json_name": "version",
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "schemaId": {
                              "type": "int32",
                              "id": 3,
                              "options": {
                                "json_name": "id",
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "schemaType": {
                              "type": "Schema.SchemaType",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "schemaPayload": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "json_name": "schema",
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "references": {
                              "rule": "repeated",
                              "type": "Schema.SchemaReference",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "SchemaConfig": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/SchemaConfig",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/config/{subject}",
                            "(google.api.resource).plural": "configs",
                            "(google.api.resource).singular": "config"
                          },
                          "oneofs": {
                            "_compatibility": {
                              "oneof": [
                                "compatibility"
                              ]
                            },
                            "_normalize": {
                              "oneof": [
                                "normalize"
                              ]
                            }
                          },
                          "fields": {
                            "compatibility": {
                              "type": "CompatibilityType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "proto3_optional": true
                              }
                            },
                            "normalize": {
                              "type": "bool",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "alias": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "CompatibilityType": {
                              "values": {
                                "NONE": 0,
                                "BACKWARD": 1,
                                "BACKWARD_TRANSITIVE": 2,
                                "FORWARD": 3,
                                "FORWARD_TRANSITIVE": 4,
                                "FULL": 5,
                                "FULL_TRANSITIVE": 6
                              }
                            }
                          }
                        },
                        "SchemaMode": {
                          "options": {
                            "(google.api.resource).type": "managedkafka.googleapis.com/SchemaMode",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/mode/{subject}",
                            "(google.api.resource).plural": "modes",
                            "(google.api.resource).singular": "mode"
                          },
                          "fields": {
                            "mode": {
                              "type": "ModeType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "ModeType": {
                              "values": {
                                "NONE": 0,
                                "READONLY": 1,
                                "READWRITE": 2,
                                "IMPORT": 3
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "apiVersion": {
              "type": "string",
              "id": 525000001,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                },
                "protoReferenceDocumentationUri": {
                  "type": "string",
                  "id": 110
                },
                "restReferenceDocumentationUri": {
                  "type": "string",
                  "id": 111
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                },
                "renamedServices": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "renamedResources": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                },
                "ignoredResources": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 4
                },
                "forcedNamespaceAliases": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                },
                "handwrittenSignatures": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 6
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                },
                "autoPopulatedFields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4,
                "SHOPPING": 5,
                "GEO": 6,
                "GENERATIVE_AI": 7
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions",
              "options": {
                "packed": false
              }
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7,
                "IDENTIFIER": 8
              }
            },
            "HttpBody": {
              "fields": {
                "contentType": {
                  "type": "string",
                  "id": 1
                },
                "data": {
                  "type": "bytes",
                  "id": 2
                },
                "extensions": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "edition": "proto2",
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "Edition": {
              "edition": "proto2",
              "values": {
                "EDITION_UNKNOWN": 0,
                "EDITION_PROTO2": 998,
                "EDITION_PROTO3": 999,
                "EDITION_2023": 1000,
                "EDITION_2024": 1001,
                "EDITION_1_TEST_ONLY": 1,
                "EDITION_2_TEST_ONLY": 2,
                "EDITION_99997_TEST_ONLY": 99997,
                "EDITION_99998_TEST_ONLY": 99998,
                "EDITION_99999_TEST_ONLY": 99999,
                "EDITION_MAX": 2147483647
              }
            },
            "FileDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "Edition",
                  "id": 14
                }
              }
            },
            "DescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "edition": "proto2",
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                },
                "declaration": {
                  "rule": "repeated",
                  "type": "Declaration",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_SOURCE"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "verification": {
                  "type": "VerificationState",
                  "id": 3,
                  "options": {
                    "default": "UNVERIFIED",
                    "retention": "RETENTION_SOURCE"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "Declaration": {
                  "fields": {
                    "number": {
                      "type": "int32",
                      "id": 1
                    },
                    "fullName": {
                      "type": "string",
                      "id": 2
                    },
                    "type": {
                      "type": "string",
                      "id": 3
                    },
                    "reserved": {
                      "type": "bool",
                      "id": 5
                    },
                    "repeated": {
                      "type": "bool",
                      "id": 6
                    }
                  },
                  "reserved": [
                    [
                      4,
                      4
                    ]
                  ]
                },
                "VerificationState": {
                  "values": {
                    "DECLARATION": 0,
                    "UNVERIFIED": 1
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REPEATED": 3,
                    "LABEL_REQUIRED": 2
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "edition": "proto2",
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  42,
                  42
                ],
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "edition": "proto2",
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 12
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "edition": "proto2",
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "targets": {
                  "rule": "repeated",
                  "type": "OptionTargetType",
                  "id": 19
                },
                "editionDefaults": {
                  "rule": "repeated",
                  "type": "EditionDefault",
                  "id": 20
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 21
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  18,
                  18
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                },
                "EditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "value": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "OneofOptions": {
              "edition": "proto2",
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 1
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "edition": "proto2",
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "edition": "proto2",
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 2
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "edition": "proto2",
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 34
                },
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "edition": "proto2",
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 35
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "edition": "proto2",
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FeatureSet": {
              "edition": "proto2",
              "fields": {
                "fieldPresence": {
                  "type": "FieldPresence",
                  "id": 1,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_2023",
                    "edition_defaults.value": "EXPLICIT"
                  }
                },
                "enumType": {
                  "type": "EnumType",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "OPEN"
                  }
                },
                "repeatedFieldEncoding": {
                  "type": "RepeatedFieldEncoding",
                  "id": 3,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "PACKED"
                  }
                },
                "utf8Validation": {
                  "type": "Utf8Validation",
                  "id": 4,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "VERIFY"
                  }
                },
                "messageEncoding": {
                  "type": "MessageEncoding",
                  "id": 5,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO2",
                    "edition_defaults.value": "LENGTH_PREFIXED"
                  }
                },
                "jsonFormat": {
                  "type": "JsonFormat",
                  "id": 6,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "ALLOW"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  1000
                ],
                [
                  1001,
                  1001
                ],
                [
                  1002,
                  1002
                ],
                [
                  9990,
                  9990
                ],
                [
                  9995,
                  9999
                ],
                [
                  10000,
                  10000
                ]
              ],
              "reserved": [
                [
                  999,
                  999
                ]
              ],
              "nested": {
                "FieldPresence": {
                  "values": {
                    "FIELD_PRESENCE_UNKNOWN": 0,
                    "EXPLICIT": 1,
                    "IMPLICIT": 2,
                    "LEGACY_REQUIRED": 3
                  }
                },
                "EnumType": {
                  "values": {
                    "ENUM_TYPE_UNKNOWN": 0,
                    "OPEN": 1,
                    "CLOSED": 2
                  }
                },
                "RepeatedFieldEncoding": {
                  "values": {
                    "REPEATED_FIELD_ENCODING_UNKNOWN": 0,
                    "PACKED": 1,
                    "EXPANDED": 2
                  }
                },
                "Utf8Validation": {
                  "values": {
                    "UTF8_VALIDATION_UNKNOWN": 0,
                    "VERIFY": 2,
                    "NONE": 3
                  }
                },
                "MessageEncoding": {
                  "values": {
                    "MESSAGE_ENCODING_UNKNOWN": 0,
                    "LENGTH_PREFIXED": 1,
                    "DELIMITED": 2
                  }
                },
                "JsonFormat": {
                  "values": {
                    "JSON_FORMAT_UNKNOWN": 0,
                    "ALLOW": 1,
                    "LEGACY_BEST_EFFORT": 2
                  }
                }
              }
            },
            "FeatureSetDefaults": {
              "edition": "proto2",
              "fields": {
                "defaults": {
                  "rule": "repeated",
                  "type": "FeatureSetEditionDefault",
                  "id": 1
                },
                "minimumEdition": {
                  "type": "Edition",
                  "id": 4
                },
                "maximumEdition": {
                  "type": "Edition",
                  "id": 5
                }
              },
              "nested": {
                "FeatureSetEditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "features": {
                      "type": "FeatureSet",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "edition": "proto2",
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1,
                      "options": {
                        "packed": true
                      }
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2,
                      "options": {
                        "packed": true
                      }
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "edition": "proto2",
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1,
                      "options": {
                        "packed": true
                      }
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            }
          }
        }
      }
    }
  }
}