// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(filter) {
  // [START workspaceevents_v1_generated_SubscriptionsService_ListSubscriptions_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Optional. The maximum number of subscriptions to return. The service might
   *  return fewer than this value.
   *  If unspecified or set to `0`, up to 50 subscriptions are returned.
   *  The maximum value is 100. If you specify a value more than 100, the system
   *  only returns 100 subscriptions.
   */
  // const pageSize = 1234
  /**
   *  Optional. A page token, received from a previous list subscriptions call.
   *  Provide this parameter to retrieve the subsequent page.
   *  When paginating, the filter value should match the call that provided the
   *  page token. Passing a different value might lead to unexpected results.
   */
  // const pageToken = 'abc123'
  /**
   *  Required. A query filter.
   *  You can filter subscriptions by event type (`event_types`)
   *  and target resource (`target_resource`).
   *  You must specify at least one event type in your query. To filter for
   *  multiple event types, use the `OR` operator.
   *  To filter by both event type and target resource, use the `AND` operator
   *  and specify the full resource name, such as
   *  `//chat.googleapis.com/spaces/{space}`.
   *  For example, the following queries are valid:
   *  ```
   *  event_types:"google.workspace.chat.membership.v1.updated" OR
   *    event_types:"google.workspace.chat.message.v1.created"
   *  event_types:"google.workspace.chat.message.v1.created" AND
   *    target_resource="//chat.googleapis.com/spaces/{space}"
   *  ( event_types:"google.workspace.chat.membership.v1.updated" OR
   *    event_types:"google.workspace.chat.message.v1.created" ) AND
   *    target_resource="//chat.googleapis.com/spaces/{space}"
   *  ```
   *  The server rejects invalid queries with an `INVALID_ARGUMENT`
   *  error.
   */
  // const filter = 'abc123'

  // Imports the Subscriptions library
  const {SubscriptionsServiceClient} = require('@google-cloud/subscriptions').v1;

  // Instantiates a client
  const subscriptionsClient = new SubscriptionsServiceClient();

  async function callListSubscriptions() {
    // Construct request
    const request = {
      filter,
    };

    // Run request
    const iterable = subscriptionsClient.listSubscriptionsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListSubscriptions();
  // [END workspaceevents_v1_generated_SubscriptionsService_ListSubscriptions_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
