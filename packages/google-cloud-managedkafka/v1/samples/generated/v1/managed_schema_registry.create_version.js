// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, schema) {
  // [START managedkafka_v1_generated_ManagedSchemaRegistry_CreateVersion_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The subject to create the version for. Structured like:
   *  `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/subjects/{subject}`
   *  or
   *  `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/subjects/{subject}`
   */
  // const parent = 'abc123'
  /**
   *  Optional. The version to create. It is optional. If not specified, the
   *  version will be created with the max version ID of the subject increased
   *  by 1. If the version ID is specified, it will be used as the new version ID
   *  and must not be used by an existing version of the subject.
   */
  // const version = 1234
  /**
   *  Optional. The schema ID of the schema. If not specified, the schema ID will
   *  be generated by the server. If the schema ID is specified, it must not be
   *  used by an existing schema that is different from the schema to be created.
   */
  // const id = 1234
  /**
   *  Optional. The type of the schema. It is optional. If not specified, the
   *  schema type will be AVRO.
   */
  // const schemaType = {}
  /**
   *  Required. The schema payload
   */
  // const schema = 'abc123'
  /**
   *  Optional. The schema references used by the schema.
   */
  // const references = [1,2,3,4]
  /**
   *  Optional. If true, the schema will be normalized before being stored. The
   *  default is false.
   */
  // const normalize = true

  // Imports the Schemaregistry library
  const {ManagedSchemaRegistryClient} = require('@google-cloud/managedkafka-schemaregistry').v1;

  // Instantiates a client
  const schemaregistryClient = new ManagedSchemaRegistryClient();

  async function callCreateVersion() {
    // Construct request
    const request = {
      parent,
      schema,
    };

    // Run request
    const response = await schemaregistryClient.createVersion(request);
    console.log(response);
  }

  callCreateVersion();
  // [END managedkafka_v1_generated_ManagedSchemaRegistry_CreateVersion_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
