// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, jobId, job) {
  // [START storagebatchoperations_v1_generated_StorageBatchOperations_CreateJob_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Value for parent.
   */
  // const parent = 'abc123'
  /**
   *  Required. The optional `job_id` for this Job . If not
   *  specified, an id is generated. `job_id` should be no more than 128
   *  characters and must include only characters available in DNS names, as
   *  defined by RFC-1123.
   */
  // const jobId = 'abc123'
  /**
   *  Required. The resource being created
   */
  // const job = {}
  /**
   *  Optional. An optional request ID to identify requests. Specify a unique
   *  request ID in case you need to retry your request. Requests with same
   *  `request_id` will be ignored for at least 60 minutes since the first
   *  request. The request ID must be a valid UUID with the exception that zero
   *  UUID is not supported (00000000-0000-0000-0000-000000000000).
   */
  // const requestId = 'abc123'

  // Imports the Storagebatchoperations library
  const {StorageBatchOperationsClient} = require('@google-cloud/storagebatchoperations').v1;

  // Instantiates a client
  const storagebatchoperationsClient = new StorageBatchOperationsClient();

  async function callCreateJob() {
    // Construct request
    const request = {
      parent,
      jobId,
      job,
    };

    // Run request
    const [operation] = await storagebatchoperationsClient.createJob(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callCreateJob();
  // [END storagebatchoperations_v1_generated_StorageBatchOperations_CreateJob_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
